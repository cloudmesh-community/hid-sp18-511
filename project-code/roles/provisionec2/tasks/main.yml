---
#Provision EC2 instances

    -   name: Create security group
        ec2_group:
            name: "{{ project_name }}_{{ env }}_security_group"
            description: "{{ project_name }}_{{ env }} security group"
            rules:
                - proto: tcp
                  from_port: 22
                  to_port: 22
                  cidr_ip: 0.0.0.0/0
                  rule_desc: allow all on port 22
                - proto: tcp
                  from_port: 80
                  to_port: 80
                  cidr_ip: 0.0.0.0/0
                  rule_desc: allow all on port 80
                - proto: tcp
                  from_port: 443
                  to_port: 443
                  cidr_ip: 0.0.0.0/0
                  rule_desc: allow all on port 443
            rules_egress:
                - proto: all                  
                  cidr_ip: 0.0.0.0/0
                  rule_desc: allow outbound to any port and machine
        register: basic_firewall
        
    -   name: Create an EC2 key
        ec2_key:
            name: "{{ project_name }}_{{ env }}_key"
        register: ec2_key
        
    -   name: Save private key to be used later
        copy:
            content: "{{ ec2_key.key.private_key }}"
            dest: ./"{{ project_name }}_{{ env }}_key-private.pem"
            mode: 0600
        when: "{{ ec2_key.changed }}"
                
    -   name: Create an EC2 instance for Spark master
        ec2:
            key_name: "{{ project_name }}_{{ env }}_key"            
            group: "{{ project_name }}_{{ env }}_security_group"
            instance_type: "{{ instance_type }}"
            image: "{{ ami_image }}"
            instance_tags:
                Name: sparkmaster
            wait: yes
            count: 1                        
        register: ec2
        
    -   name: Add the newly created EC2 instance for Spark master to host group
        lineinfile: 
                dest="{{ hostpath }}"
                insertafter=\[sparkmaster\] 
                line="{{ item.public_ip }}"
                state=present
        with_items: "{{ ec2.instances }}"

    -   name: Wait for SSH to come up for Spark master
        local_action: wait_for 
                host="{{ item.public_ip }}"
                port=22 
                state=started
        with_items: "{{ ec2.instances }}"
        
    -   name: Create two EC2 instances for Spark worker
        ec2:
            key_name: "{{ project_name }}_{{ env }}_key"   
            group: "{{ project_name }}_{{ env }}_security_group"
            instance_type: "{{ instance_type }}"
            image: "{{ ami_image }}"
            instance_tags:
                Name: sparworker
            wait: yes
            count: 2                        
        register: ec2
        
    -   name: Add the newly created EC2 instances for Spark worker to host group
        lineinfile: 
                dest="{{ hostpath }}"
                insertafter=\[sparkworker\]                
                line="{{ item.public_ip }}"
                state=present
        with_items: "{{ ec2.instances }}"

    -   name: Wait for SSH to come up for Spark worker
        local_action: wait_for 
                host="{{ item.public_ip }}"
                port=22 
                state=started
        with_items: "{{ ec2.instances }}"